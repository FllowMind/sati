<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jyu.sati.business.dao.CompanyDao">
	<resultMap id="BaseResultMap" type="com.jyu.sati.entity.Company">
		<id column="COMPANY_ID" jdbcType="INTEGER" property="companyId" />
		<result column="COMPANY_NATURE_ID" jdbcType="INTEGER" property="companyNatureId" />
		<result column="REGISTERED_CAPITAL" jdbcType="REAL"
			property="registeredCapital" />
		<result column="REGISTERED_ADDRESS" jdbcType="VARCHAR"
			property="registeredAddress" />
		<result column="INDUSTRY_ID" jdbcType="INTEGER" property="industryId" />
		<result column="CIRC_OR_NOT" jdbcType="INTEGER" property="circOrNot" />
		<result column="CTT_OR_NOT" jdbcType="INTEGER" property="cttOrNot" />
		<result column="BUSINESS_FIELD" jdbcType="VARCHAR" property="businessField" />
		<result column="REMARK" jdbcType="VARCHAR" property="remark" />
		<result column="SOE_ID" jdbcType="INTEGER" property="soeId" />
		<result column="BASE_INFO_ID" jdbcType="INTEGER" property="baseInfoId" />
	</resultMap>
	<sql id="Base_Column_List">
		COMPANY_ID, COMPANY_NATURE_ID, REGISTERED_CAPITAL,
		REGISTERED_ADDRESS,
		INDUSTRY_ID,
		CIRC_OR_NOT, CTT_OR_NOT,
		BUSINESS_FIELD, REMARK, SOE_ID, BASE_INFO_ID
	</sql>
	<select id="selectByPrimaryKey" parameterType="java.lang.Integer"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from companies
		where COMPANY_ID = #{companyId,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from
		companies
		where COMPANY_ID = #{companyId,jdbcType=INTEGER}
	</delete>
	<insert id="insert" useGeneratedKeys="true" keyProperty="companyId"
		parameterType="com.jyu.sati.entity.Company">
		insert into companies (COMPANY_ID, COMPANY_NATURE_ID,
		REGISTERED_CAPITAL,
		REGISTERED_ADDRESS, INDUSTRY_ID, CIRC_OR_NOT,
		CTT_OR_NOT, BUSINESS_FIELD, REMARK,
		SOE_ID, BASE_INFO_ID)
		values
		(#{companyId,jdbcType=INTEGER}, #{companyNatureId,jdbcType=INTEGER},
		#{registeredCapital,jdbcType=REAL},
		#{registeredAddress,jdbcType=VARCHAR}, #{industryId,jdbcType=INTEGER},
		#{circOrNot,jdbcType=INTEGER},
		#{cttOrNot,jdbcType=INTEGER},
		#{businessField,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR},
		#{soeId,jdbcType=INTEGER}, #{baseInfoId,jdbcType=INTEGER})
	</insert>
	<insert id="insertSelective" useGeneratedKeys="true"
		keyProperty="companyId" parameterType="com.jyu.sati.entity.Company">
		insert into companies
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="companyId != null">
				COMPANY_ID,
			</if>
			<if test="companyNatureId != null">
				COMPANY_NATURE_ID,
			</if>
			<if test="registeredCapital != null">
				REGISTERED_CAPITAL,
			</if>
			<if test="registeredAddress != null">
				REGISTERED_ADDRESS,
			</if>
			<if test="industryId != null">
				INDUSTRY_ID,
			</if>
			<if test="circOrNot != null">
				CIRC_OR_NOT,
			</if>
			<if test="cttOrNot != null">
				CTT_OR_NOT,
			</if>
			<if test="businessField != null">
				BUSINESS_FIELD,
			</if>
			<if test="remark != null">
				REMARK,
			</if>
			<if test="soeId != null">
				SOE_ID,
			</if>
			<if test="baseInfoId != null">
				BASE_INFO_ID,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="companyId != null">
				#{companyId,jdbcType=INTEGER},
			</if>
			<if test="companyNatureId != null">
				#{companyNatureId,jdbcType=INTEGER},
			</if>
			<if test="registeredCapital != null">
				#{registeredCapital,jdbcType=REAL},
			</if>
			<if test="registeredAddress != null">
				#{registeredAddress,jdbcType=VARCHAR},
			</if>
			<if test="industryId != null">
				#{industryId,jdbcType=INTEGER},
			</if>
			<if test="circOrNot != null">
				#{circOrNot,jdbcType=INTEGER},
			</if>
			<if test="cttOrNot != null">
				#{cttOrNot,jdbcType=INTEGER},
			</if>
			<if test="businessField != null">
				#{businessField,jdbcType=VARCHAR},
			</if>
			<if test="remark != null">
				#{remark,jdbcType=VARCHAR},
			</if>
			<if test="soeId != null">
				#{soeId,jdbcType=INTEGER},
			</if>
			<if test="baseInfoId != null">
				#{baseInfoId,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.jyu.sati.entity.Company">
		update companies
		<set>
			<if test="companyNatureId != null">
				COMPANY_NATURE_ID = #{companyNatureId,jdbcType=INTEGER},
			</if>
			<if test="registeredCapital != null">
				REGISTERED_CAPITAL = #{registeredCapital,jdbcType=REAL},
			</if>
			<if test="registeredAddress != null">
				REGISTERED_ADDRESS =
				#{registeredAddress,jdbcType=VARCHAR},
			</if>
			<if test="industryId != null">
				INDUSTRY_ID = #{industryId,jdbcType=INTEGER},
			</if>
			<if test="circOrNot != null">
				CIRC_OR_NOT = #{circOrNot,jdbcType=INTEGER},
			</if>
			<if test="cttOrNot != null">
				CTT_OR_NOT = #{cttOrNot,jdbcType=INTEGER},
			</if>
			<if test="businessField != null">
				BUSINESS_FIELD = #{businessField,jdbcType=VARCHAR},
			</if>
			<if test="remark != null">
				REMARK = #{remark,jdbcType=VARCHAR},
			</if>
			<if test="soeId != null">
				SOE_ID = #{soeId,jdbcType=INTEGER},
			</if>
			<if test="baseInfoId != null">
				BASE_INFO_ID = #{baseInfoId,jdbcType=INTEGER},
			</if>
		</set>
		where COMPANY_ID = #{companyId,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.jyu.sati.entity.Company">
		update companies
		set COMPANY_NATURE_ID = #{companyNatureId,jdbcType=INTEGER},
		REGISTERED_CAPITAL = #{registeredCapital,jdbcType=REAL},
		REGISTERED_ADDRESS = #{registeredAddress,jdbcType=VARCHAR},
		INDUSTRY_ID = #{industryId,jdbcType=INTEGER},
		CIRC_OR_NOT =
		#{circOrNot,jdbcType=INTEGER},
		CTT_OR_NOT =
		#{cttOrNot,jdbcType=INTEGER},
		BUSINESS_FIELD =
		#{businessField,jdbcType=VARCHAR},
		REMARK = #{remark,jdbcType=VARCHAR},
		SOE_ID = #{soeId,jdbcType=INTEGER},
		BASE_INFO_ID =
		#{baseInfoId,jdbcType=INTEGER}
		where COMPANY_ID =
		#{companyId,jdbcType=INTEGER}
	</update>

	<!-- 通过用户id获取企业信息 -->
	<select id="getCompanyByUserId" parameterType="java.lang.String"
		resultMap="BaseResultMap">
		SELECT
		c.*
		FROM
		companies c
		INNER JOIN
		users u
		ON
		c.COMPANY_ID
		=
		u.COMPANY_ID
		WHERE
		u.USER_ID = #{userId,jdbcType=VARCHAR}
	</select>

</mapper>